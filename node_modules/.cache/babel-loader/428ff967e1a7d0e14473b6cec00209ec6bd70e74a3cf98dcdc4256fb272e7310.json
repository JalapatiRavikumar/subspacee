{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rravi\\\\Downloads\\\\abcd\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { mockNhost, MockGraphQLClient } from './graphql';\nimport { ThemeProvider } from './context/ThemeContext';\nimport AuthPage from './components/AuthPage';\nimport ChatPage from './pages/ChatPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [client, setClient] = useState(null);\n  useEffect(() => {\n    mockNhost.auth.onAuthStateChanged(isAuth => {\n      setIsAuthenticated(isAuth);\n      if (isAuth) {\n        setClient(new MockGraphQLClient());\n      } else {\n        setClient(null);\n      }\n    });\n  }, []);\n  const handleLogout = async () => {\n    await mockNhost.auth.signOut();\n    setIsAuthenticated(false);\n    setClient(null);\n    // Clear the mock DB on logout for a clean slate\n    localStorage.removeItem('mock_db_chats');\n    localStorage.removeItem('mock_db_messages');\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    children: !isAuthenticated ? /*#__PURE__*/_jsxDEV(AuthPage, {\n      onLogin: () => {\n        setIsAuthenticated(true);\n        setClient(new MockGraphQLClient());\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ChatPage, {\n      client: client,\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Q9eR+nhQF476VCDW5qwL5kJRtFs=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","mockNhost","MockGraphQLClient","ThemeProvider","AuthPage","ChatPage","jsxDEV","_jsxDEV","App","_s","isAuthenticated","setIsAuthenticated","client","setClient","auth","onAuthStateChanged","isAuth","handleLogout","signOut","localStorage","removeItem","children","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","onLogout","_c","$RefreshReg$"],"sources":["C:/Users/rravi/Downloads/abcd/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { mockNhost, MockGraphQLClient } from './graphql';\r\nimport { ThemeProvider } from './context/ThemeContext';\r\nimport AuthPage from './components/AuthPage';\r\nimport ChatPage from './pages/ChatPage';\r\n\r\nexport default function App() {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [client, setClient] = useState(null);\r\n\r\n  useEffect(() => {\r\n    mockNhost.auth.onAuthStateChanged((isAuth) => {\r\n      setIsAuthenticated(isAuth);\r\n      if (isAuth) {\r\n        setClient(new MockGraphQLClient());\r\n      } else {\r\n        setClient(null);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const handleLogout = async () => {\r\n    await mockNhost.auth.signOut();\r\n    setIsAuthenticated(false);\r\n    setClient(null);\r\n    // Clear the mock DB on logout for a clean slate\r\n    localStorage.removeItem('mock_db_chats');\r\n    localStorage.removeItem('mock_db_messages');\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider>\r\n      {!isAuthenticated ? (\r\n        <AuthPage onLogin={() => {\r\n          setIsAuthenticated(true);\r\n          setClient(new MockGraphQLClient());\r\n        }} />\r\n      ) : (\r\n        <ChatPage client={client} onLogout={handleLogout} />\r\n      )}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,iBAAiB,QAAQ,WAAW;AACxD,SAASC,aAAa,QAAQ,wBAAwB;AACtD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACdC,SAAS,CAACa,IAAI,CAACC,kBAAkB,CAAEC,MAAM,IAAK;MAC5CL,kBAAkB,CAACK,MAAM,CAAC;MAC1B,IAAIA,MAAM,EAAE;QACVH,SAAS,CAAC,IAAIX,iBAAiB,CAAC,CAAC,CAAC;MACpC,CAAC,MAAM;QACLW,SAAS,CAAC,IAAI,CAAC;MACjB;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMhB,SAAS,CAACa,IAAI,CAACI,OAAO,CAAC,CAAC;IAC9BP,kBAAkB,CAAC,KAAK,CAAC;IACzBE,SAAS,CAAC,IAAI,CAAC;IACf;IACAM,YAAY,CAACC,UAAU,CAAC,eAAe,CAAC;IACxCD,YAAY,CAACC,UAAU,CAAC,kBAAkB,CAAC;EAC7C,CAAC;EAED,oBACEb,OAAA,CAACJ,aAAa;IAAAkB,QAAA,EACX,CAACX,eAAe,gBACfH,OAAA,CAACH,QAAQ;MAACkB,OAAO,EAAEA,CAAA,KAAM;QACvBX,kBAAkB,CAAC,IAAI,CAAC;QACxBE,SAAS,CAAC,IAAIX,iBAAiB,CAAC,CAAC,CAAC;MACpC;IAAE;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAELnB,OAAA,CAACF,QAAQ;MAACO,MAAM,EAAEA,MAAO;MAACe,QAAQ,EAAEV;IAAa;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACpD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAEpB;AAACjB,EAAA,CApCuBD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}