{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rravi\\\\Downloads\\\\abcd\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { mockNhost, MockGraphQLClient } from './graphql';\nimport { ThemeProvider } from './context/ThemeContext';\nimport AuthPage from './components/AuthPage';\nimport ChatPage from './pages/ChatPage';\n\n// --- STYLES & ANIMATIONS --- \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CosmicStyles = () => /*#__PURE__*/_jsxDEV(\"style\", {\n  children: ` \n    @keyframes move-aurora { \n      0% { background-position: 0% 50%; } \n      50% { background-position: 100% 50%; } \n      100% { background-position: 0% 50%; } \n    } \n    .aurora-bg { \n      background: linear-gradient(-45deg, #0c4a6e, #4c1d95, #0891b2, #581c87); \n      background-size: 400% 400%; \n      animation: move-aurora 20s ease infinite; \n    } \n    @keyframes pulse-glow { \n      0%, 100% { box-shadow: 0 0 8px var(--glow-color), 0 0 14px var(--glow-color), 0 0 22px var(--glow-color); } \n      50% { box-shadow: 0 0 16px var(--glow-color-brighter), 0 0 30px var(--glow-color-brighter), 0 0 50px var(--glow-color-brighter); } \n    } \n    .pulse-glow-anim { \n      animation: pulse-glow 3s ease-in-out infinite; \n    } \n    @keyframes slide-in { \n      from { opacity: 0; transform: translateX(-20px); } \n      to { opacity: 1; transform: translateX(0); } \n    } \n    .slide-in-anim { \n      animation: slide-in 0.5s ease-out forwards; \n    } \n  `\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 3\n}, this);\n_c = CosmicStyles;\nexport default function App() {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [client, setClient] = useState(null);\n  useEffect(() => {\n    // FIX: Correctly call the function on the 'auth' object \n    mockNhost.auth.onAuthStateChanged(isAuth => {\n      setIsAuthenticated(isAuth);\n      if (isAuth) {\n        setClient(new MockGraphQLClient());\n      } else {\n        setClient(null);\n      }\n    });\n  }, []);\n  const handleLogout = async () => {\n    await mockNhost.auth.signOut();\n    setIsAuthenticated(false);\n    setClient(null);\n    // Clear the mock DB on logout for a clean slate\n    localStorage.removeItem('mock_db_chats');\n    localStorage.removeItem('mock_db_messages');\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    children: [/*#__PURE__*/_jsxDEV(CosmicStyles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), !isAuthenticated ? /*#__PURE__*/_jsxDEV(AuthPage, {\n      onLogin: () => {\n        setIsAuthenticated(true);\n        setClient(new MockGraphQLClient());\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ChatPage, {\n      client: client,\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Q9eR+nhQF476VCDW5qwL5kJRtFs=\");\n_c2 = App;\nvar _c, _c2;\n$RefreshReg$(_c, \"CosmicStyles\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","mockNhost","MockGraphQLClient","ThemeProvider","AuthPage","ChatPage","jsxDEV","_jsxDEV","CosmicStyles","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","isAuthenticated","setIsAuthenticated","client","setClient","auth","onAuthStateChanged","isAuth","handleLogout","signOut","localStorage","removeItem","onLogin","onLogout","_c2","$RefreshReg$"],"sources":["C:/Users/rravi/Downloads/abcd/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { mockNhost, MockGraphQLClient } from './graphql';\r\nimport { ThemeProvider } from './context/ThemeContext';\r\nimport AuthPage from './components/AuthPage';\r\nimport ChatPage from './pages/ChatPage';\r\n\r\n// --- STYLES & ANIMATIONS --- \r\nconst CosmicStyles = () => ( \r\n  <style>{` \r\n    @keyframes move-aurora { \r\n      0% { background-position: 0% 50%; } \r\n      50% { background-position: 100% 50%; } \r\n      100% { background-position: 0% 50%; } \r\n    } \r\n    .aurora-bg { \r\n      background: linear-gradient(-45deg, #0c4a6e, #4c1d95, #0891b2, #581c87); \r\n      background-size: 400% 400%; \r\n      animation: move-aurora 20s ease infinite; \r\n    } \r\n    @keyframes pulse-glow { \r\n      0%, 100% { box-shadow: 0 0 8px var(--glow-color), 0 0 14px var(--glow-color), 0 0 22px var(--glow-color); } \r\n      50% { box-shadow: 0 0 16px var(--glow-color-brighter), 0 0 30px var(--glow-color-brighter), 0 0 50px var(--glow-color-brighter); } \r\n    } \r\n    .pulse-glow-anim { \r\n      animation: pulse-glow 3s ease-in-out infinite; \r\n    } \r\n    @keyframes slide-in { \r\n      from { opacity: 0; transform: translateX(-20px); } \r\n      to { opacity: 1; transform: translateX(0); } \r\n    } \r\n    .slide-in-anim { \r\n      animation: slide-in 0.5s ease-out forwards; \r\n    } \r\n  `}</style> \r\n);\r\n\r\nexport default function App() {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [client, setClient] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // FIX: Correctly call the function on the 'auth' object \r\n    mockNhost.auth.onAuthStateChanged((isAuth) => { \r\n      setIsAuthenticated(isAuth); \r\n      if (isAuth) { \r\n        setClient(new MockGraphQLClient()); \r\n      } else { \r\n        setClient(null); \r\n      } \r\n    }); \r\n  }, []);\r\n\r\n  const handleLogout = async () => {\r\n    await mockNhost.auth.signOut();\r\n    setIsAuthenticated(false);\r\n    setClient(null);\r\n    // Clear the mock DB on logout for a clean slate\r\n    localStorage.removeItem('mock_db_chats');\r\n    localStorage.removeItem('mock_db_messages');\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider>\r\n      <CosmicStyles />\r\n      {!isAuthenticated ? (\r\n        <AuthPage onLogin={() => {\r\n          setIsAuthenticated(true);\r\n          setClient(new MockGraphQLClient());\r\n        }} />\r\n      ) : (\r\n        <ChatPage client={client} onLogout={handleLogout} />\r\n      )}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,iBAAiB,QAAQ,WAAW;AACxD,SAASC,aAAa,QAAQ,wBAAwB;AACtD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,kBAAkB;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAGA,CAAA,kBACnBD,OAAA;EAAAE,QAAA,EAAQ;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAG;EAAAC,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAQ,CACV;AAACC,EAAA,GA3BIN,YAAY;AA6BlB,eAAe,SAASO,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACoB,MAAM,EAAEC,SAAS,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd;IACAC,SAAS,CAACoB,IAAI,CAACC,kBAAkB,CAAEC,MAAM,IAAK;MAC5CL,kBAAkB,CAACK,MAAM,CAAC;MAC1B,IAAIA,MAAM,EAAE;QACVH,SAAS,CAAC,IAAIlB,iBAAiB,CAAC,CAAC,CAAC;MACpC,CAAC,MAAM;QACLkB,SAAS,CAAC,IAAI,CAAC;MACjB;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMvB,SAAS,CAACoB,IAAI,CAACI,OAAO,CAAC,CAAC;IAC9BP,kBAAkB,CAAC,KAAK,CAAC;IACzBE,SAAS,CAAC,IAAI,CAAC;IACf;IACAM,YAAY,CAACC,UAAU,CAAC,eAAe,CAAC;IACxCD,YAAY,CAACC,UAAU,CAAC,kBAAkB,CAAC;EAC7C,CAAC;EAED,oBACEpB,OAAA,CAACJ,aAAa;IAAAM,QAAA,gBACZF,OAAA,CAACC,YAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACf,CAACI,eAAe,gBACfV,OAAA,CAACH,QAAQ;MAACwB,OAAO,EAAEA,CAAA,KAAM;QACvBV,kBAAkB,CAAC,IAAI,CAAC;QACxBE,SAAS,CAAC,IAAIlB,iBAAiB,CAAC,CAAC,CAAC;MACpC;IAAE;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAELN,OAAA,CAACF,QAAQ;MAACc,MAAM,EAAEA,MAAO;MAACU,QAAQ,EAAEL;IAAa;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACpD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAEpB;AAACG,EAAA,CAtCuBD,GAAG;AAAAe,GAAA,GAAHf,GAAG;AAAA,IAAAD,EAAA,EAAAgB,GAAA;AAAAC,YAAA,CAAAjB,EAAA;AAAAiB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}